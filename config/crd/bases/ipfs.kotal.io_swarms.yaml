
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: swarms.ipfs.kotal.io
spec:
  group: ipfs.kotal.io
  names:
    kind: Swarm
    listKind: SwarmList
    plural: swarms
    singular: swarm
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.nodesCount
      name: Nodes
      type: integer
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Swarm is the Schema for the swarms API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SwarmSpec defines the desired state of Swarm
            properties:
              nodes:
                description: Nodes is swarm nodes
                items:
                  description: Node is ipfs node
                  properties:
                    id:
                      description: ID is node peer ID
                      type: string
                    name:
                      description: Name is node name
                      type: string
                    privateKey:
                      description: PrivateKey is node private key
                      type: string
                    profiles:
                      description: Profiles is a list of profiles to apply
                      items:
                        description: Profile is ipfs configuration
                        enum:
                        - server
                        - randomports
                        - default-datastore
                        - local-discovery
                        - test
                        - default-networking
                        - flatfs
                        - badgerds
                        - lowpower
                        type: string
                      type: array
                    resources:
                      description: Resources is node compute and storage resources
                      properties:
                        cpu:
                          description: CPU is cpu cores the node requires
                          pattern: ^[1-9][0-9]*m?$
                          type: string
                        cpuLimit:
                          description: CPULimit is cpu cores the node is limited to
                          pattern: ^[1-9][0-9]*m?$
                          type: string
                        memory:
                          description: Memory is memmory requirements
                          pattern: ^[1-9][0-9]*[KMGTPE]i$
                          type: string
                        memoryLimit:
                          description: MemoryLimit is cpu cores the node is limited to
                          pattern: ^[1-9][0-9]*[KMGTPE]i$
                          type: string
                        storage:
                          description: Storage is disk space storage requirements
                          pattern: ^[1-9][0-9]*[KMGTPE]i$
                          type: string
                        storageClass:
                          description: StorageClass is the volume storage class
                          type: string
                      type: object
                  required:
                  - id
                  - name
                  - privateKey
                  type: object
                minItems: 1
                type: array
            required:
            - nodes
            type: object
          status:
            description: SwarmStatus defines the observed state of Swarm
            properties:
              nodesCount:
                description: NodesCount is number of nodes in this swarm
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
